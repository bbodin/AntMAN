/*
 * MVNBugTest.cpp
 *
 *  Created on: May 11, 2021
 *      Author: toky
 */

#define BOOST_TEST_MODULE MVNBugTest
#include "testutils.h"

#include <PriorPoisson.h>
#include <MixtureMultiVariateNormal.h>


BOOST_AUTO_TEST_SUITE( test_suite_multivariate_normal_dataset )

BOOST_AUTO_TEST_CASE( test_multivariate_normal_bug )
{
	// R Script
	// x1 <- cbind(rnorm(100, mean = 0, sd = 0.5), rnorm(100, mean = 0, sd = 0.5))
	// x2 <- cbind(rnorm(100, mean = 3, sd = 0.5), rnorm(100, mean = 3, sd = 0.5))
	// x3 <- cbind(rnorm(100, mean = 8, sd = 0.5), rnorm(100, mean = 8, sd = 0.5))


	static const arma::mat y_mvn = {
			{ 0.42775039, 0.3114495}, { 0.25214008, 0.43348169}, { 0.09037469, -0.25171882}, { 0.54683372, -0.8384115}, { -0.37821262, -0.11217613}, { 0.0801661, 0.19335763}, { -0.24671258, -0.43680421}, { -0.49476089, -1.18674706}, { 0.26532872, -0.39219992}, { -0.75200275, -0.73899282}, { -0.62630676, -1.11075724}, { 0.11794889, 0.50175006}, { -0.62465037, -0.71485789}, { -0.12472044, -0.04698535}, { -0.12647273, -0.38120679}, { 0.11592672, 0.07393733}, { 0.38932432, 0.42320588}, { -0.26188585, 0.01189839}, { 0.01101818, -1.11151106}, { -0.48771581, -0.34275431}, { -0.37204366, -0.23914462}, { -0.07802695, -0.21093969}, { 0.70060401, -0.32964876}, { 0.14478053, 0.22018863}, { 0.07981936, 0.11001745}, { 2.68983874, 2.97117015}, { 2.40986859, 2.89325111}, { 2.64006203, 3.09343746}, { 1.92721767, 2.38783012}, { 3.08423847, 2.84250761}, { 3.19812322, 3.08785244}, { 3.28277829, 3.25954698}, { 3.76886777, 2.07186543}, { 3.02832773, 3.14046246}, { 3.25866389, 2.68789666}, { 2.86208559, 3.44990953}, { 2.49240359, 3.38652035}, { 3.06641056, 2.4212727}, { 2.45980179, 2.96186781}, { 3.64621721, 3.32049911}, { 2.81345803, 3.2960084}, { 1.54232018, 4.1495614}, { 3.41309071, 4.50070476}, { 2.46278037, 2.67367349}, { 2.2263974, 3.54911575}, { 3.15942455, 3.52062201}, { 2.90442699, 2.17195191}, { 3.59455799, 2.27360226}, { 3.4806967, 2.88700651}, { 2.58802931, 3.12555656}, { 2.56590374, 3.02238771}, { 3.07363801, 3.13854407}, { 3.61298284, 2.83493779}, { 3.01610854, 3.63307558}, { 2.51524989, 3.19021344}, { 2.27160933, 2.49202036}, { 3.92240823, 3.08625054}, { 3.09298321, 3.26081433}, { 2.85109258, 3.41209136}, { 3.18789604, 2.41442352}, { 2.64345682, 3.29203761}, { 3.65110356, 3.81383001}, { 3.39288923, 3.08371263}, { 3.260969, 3.14833653}, { 3.32093478, 3.27984596}, { 3.55624758, 2.88820713}, { 3.47480764, 2.90229067}, { 2.70367588, 2.74947056}, { 2.66506977, 3.26848447}, { 2.65886523, 3.14978289}, { 3.75034695, 2.42711153}, { 3.3549353, 3.32482532}, { 3.16298171, 2.03966308}, { 2.50943839, 2.74634483}, { 2.46233157, 3.27890014}, { 2.77640682, 2.8399262}, { 3.13697721, 3.10326485}, { 3.92673258, 2.90374478}, { 1.71264795, 2.52205672}, { 2.97019899, 2.87496039}, { 3.58075591, 3.67273011}, { 3.5181101, 3.23853163}, { 2.12782268, 3.86313469}, { 3.48134459, 2.66212565}, { 2.6182099, 3.11599758}, { 2.57090162, 2.3875195}, { 1.89227625, 3.17880856}, { 3.31315696, 2.64655765}, { 2.75178563, 2.832676}, { 3.33499029, 2.34461507}, { 2.94465563, 3.85619139}, { 3.6874883, 3.45141446}, { 2.37804949, 3.29151003}, { 2.86277712, 3.6170866}, { 2.82502704, 2.92732631}, { 3.38867955, 2.90612503}, { 2.87533414, 1.95100359}, { 2.60391182, 2.44443379}, { 2.67721013, 2.61204655}, { 2.53039493, 3.73775388}, { 2.88990618, 2.44939097}, { 3.43379734, 2.75022491}, { 3.36288461, 3.22573037}, { 2.56222973, 3.34202984}, { 3.03038902, 2.87094309}, { 2.93783518, 2.8382454}, { 3.80355045, 3.15309059}, { 2.64104635, 2.81756951}, { 3.17123555, 2.7581828}, { 2.59070901, 2.88238561}, { 3.02386813, 2.77572438}, { 3.18468815, 2.99395766}, { 3.58494061, 3.33106953}, { 3.27547554, 2.95191749}, { 2.41003394, 2.74874372}, { 3.272035, 2.34436011}, { 2.80308564, 2.24244974}, { 3.38920257, 2.46293438}, { 3.45581797, 3.20802645}, { 2.78360461, 2.88260306}, { 2.03800921, 3.10188318}, { 3.48149965, 2.46481405}, { 3.08799567, 3.25866508}, { 2.73549791, 2.26272873}, { 3.63259329, 2.63788161}, { 9.02305882, 7.89463384}, { 7.94646375, 7.70558354}, { 8.37113189, 7.29909908}, { 7.95471169, 8.47369789}, { 7.37180447, 7.47537128}, { 6.98826371, 8.79946523}, { 8.70618772, 8.78190605}, { 8.0200922, 7.8744508}, { 7.83788875, 8.40149314}, { 8.04457471, 8.50303694}, { 7.98445086, 8.72187541}, { 7.52108261, 8.00096408}, { 7.81952773, 8.93631102}, { 8.57655884, 7.33687566}, { 7.70690093, 7.70172333}, { 7.89889453, 7.75457653}, { 7.45812833, 8.52492369}, { 7.4949831, 8.23065283}, { 7.87741483, 8.54233839}, { 8.04842285, 7.99300776}, { 7.42712112, 7.5097757}, { 8.54925769, 8.51386816}, { 7.70028927, 8.13799334}, { 8.50330741, 7.62893434}, { 7.88550737, 8.86007985}, { 7.32260483, 7.66106351}, { 7.7943356, 7.61361879}, { 8.63721882, 7.30866021}, { 7.73397542, 8.34353523}, { 8.16488136, 9.33594276}, { 7.97377548, 7.49389274}, { 7.6790854, 7.47299059}, { 9.05183085, 7.7411433}, { 7.72525714, 7.97894258}, { 8.00627796, 7.82860373}, { 7.77125665, 6.87569794}, { 8.34642835, 6.73981582}, { 7.08274063, 8.01618805}, { 7.46617381, 7.74220815}, { 8.52321278, 8.47503626}, { 7.76334306, 8.22925159}, { 9.00036152, 7.73040475}, { 8.18403196, 8.84219334}, { 7.55204236, 7.80531803}, { 7.7069931, 8.05475323}, { 7.40985687, 8.30402919}, { 8.07781722, 8.74813676}, { 8.10523626, 8.35227474}, { 7.12027939, 8.08059543}, { 7.95712195, 8.34329482}, { 7.87779714, 8.33583488}, { 8.10004036, 9.44541169}, { 8.67287679, 8.16362529}, { 6.65021504, 8.35647791}, { 8.06546334, 7.72318405}, { 8.60594473, 9.10505548}, { 7.60509828, 7.82596689}, { 8.01875959, 9.12965599}, { 8.46730441, 7.42324447}, { 7.98056926, 8.07626064}, { 7.61346227, 7.60041283}, { 8.76307953, 8.03510093}, { 8.4820016, 8.03141927}, { 8.4629462, 8.22790634}, { 8.17493048, 7.8077145}, { 7.94195955, 8.13286602}, { 7.74450649, 8.28696937}, { 8.77761333, 7.2969042}, { 7.66884392, 8.35851696}, { 8.15967907, 8.34051011}, { 8.84978113, 7.58976295}, { 7.67650209, 9.12581511}, { 7.87409117, 7.54013399}, { 7.53990755, 7.98007771}, { 8.38027146, 7.65912078}, { 7.32425403, 8.06277102}, { 8.37178985, 7.498678}, { 8.78733743, 8.39127831}, { 8.50381381, 7.72334344}, { 8.95784327, 8.00923494}, { 9.25375516, 7.8362212}, { 7.45878734, 8.17979563}, { 7.86893396, 7.3209488}, { 8.06426139, 7.73148936}, { 7.41162089, 7.90977529}, { 8.06945663, 7.45288586}, { 7.53289891, 7.78283426}, { 7.98132928, 7.83737806}, { 7.8293316, 7.68869839}, { 7.91000004, 8.83128213}, { 7.65600458, 8.18855062}, { 8.34647741, 7.39380176}, { 7.88823011, 8.71333595}, { 8.54385067, 8.60953206}, { 8.29696662, 7.702355}, { 8.76423136, 8.40586201}, { 8.40852599, 8.38663294}, { 8.33053403, 7.85236098}, { 8.22592779, 8.04921725}, { 8.3793607, 8.2897755}};


	PriorPoisson *prior = new PriorPoisson(poisson_gamma_h_param_t(1,1,0.00001),poisson_gamma_q_param_t(1,1));

	MixtureMultivariateNormal * mixture = new MixtureMultivariateNormal ((arma::vec){0,0}, 1, 6, arma::eye(2,2));

	cluster_indices_t initial_clustering  = arma::regspace<arma::ivec>(0,  y_mvn.n_rows -1);

	AntMANLogger logger (std::vector<std::string>(), (1000 - 500) / 10 );
	auto start_gibbs           = std::chrono::system_clock::now();
	mixture->fit(y_mvn , initial_clustering, false, prior , 1000 ,500 ,10 , false , &logger);
	auto end_gibbs             = std::chrono::system_clock::now();
	auto elapsed_gibbs         = end_gibbs - start_gibbs;
	auto total_gibbs           = elapsed_gibbs.count() / 1000000.0;
	VERBOSE_INFO ( getString (logger)) ;
	COUT_STREAM << "Total time: " << total_gibbs << "ms"  << std::endl ;
}


BOOST_AUTO_TEST_SUITE_END()




