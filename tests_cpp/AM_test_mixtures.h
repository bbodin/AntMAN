/*
 * AM_test_mixtures.hpp
 *
 *  Created on: Mar 6, 2020
 *      Author: toky
 */

#ifndef TESTS_CPP_AM_TEST_MIXTURES_H_
#define TESTS_CPP_AM_TEST_MIXTURES_H_


#ifndef NO_RCPP
#define NO_RCPP
#endif

#include "../AntMAN/src/Mixture.h"
#include "../AntMAN/src/MixtureMultivariateBinomial.h"
#include "../AntMAN/src/MixtureUnivariateNormal.h"
#include "../AntMAN/src/MixtureUnivariatePoisson.h"
#include "../AntMAN/src/MixtureMultiVariateNormal.h"
#include "../AntMAN/src/Priors.h"
#include "../AntMAN/src/verbose.h"

std::string getString (AntMANLogger& logger) {
	 std::ostringstream outputstr;
	std::vector<std::string> names = {};
	int total = 0;

	if (logger.haslog("CI")) {total++;names.push_back("CI");}
	if (logger.haslog("CI")) {outputstr << "Size of CI vector = " << logger.getlog<cluster_indices_t>("CI").size() << std::endl ;}


	return outputstr.str();



}

void test_Mixture_MultivariateNormal (long niter, long burnin, long thin) {
	static const arma::mat y_mvn = {
			{ 0.8005543 , 1.190207 },{ 0.07050839 , 0.1292877 },{ 3.856332 , 4.198754 },{ 3.388735 , 3.663735 },
			{ 4.114283 , 6.422595 },{ 4.193754 , 3.4338 },{ 5.154485 , 4.619488 },{ -2.171955 , -3.702855 },{ -0.2158654 , -0.3349128 },{ -0.7288912 , -0.6250393 },
			{ -0.1453936 , -1.165545 },{ -1.138137 , 1.253815 },{ 2.794663 , 3.60637 },{ -2.497646 , -2.571382 },{ 4.815743 , 0.7600086 },{ -0.3059627 , -0.380471 },
			{ 0.4345504 , 0.8001769 },{ -1.448702 , -2.701684 },{ 0.3937087 , 0.4036315 },{ 0.7799651 , -0.08336907 },{ -4.038929 , -1.272177 },{ 5.387013 , 3.569148 },
			{ 3.23883 , 5.683448 },{ 0.1238542 , 0.2159416 },{ 3.654528 , 3.307028 },{ 3.155875 , 3.095199 },{ 5.123415 , 4.439749 },{ 4.600469 , 5.886379 },
			{ -2.871355 , -3.7474 },{ -0.7092008 , -0.6880086 },{ 4.097935 , 3.323176 },{ -2.779643 , -3.197126 },{ -3.226233 , -3.153992 },{ -2.320091 , -3.447735 },
			{ 3.008837 , 4.792755 },{ 3.503503 , 5.184964 },{ 3.612037 , 3.453519 },{ -4.095711 , -1.502948 },{ -0.4635565 , 0.3054632 },{ -2.830159 , -3.861133 },
			{ 1.778742 , 0.03768285 },{ 3.800898 , 3.112146 },{ -3.786713 , -2.330038 },{ 3.484713 , 4.966055 },{ 1.763653 , 0.4856014 },{ -3.247805 , -2.498137 },
			{ 4.059602 , 2.477858 },{ -3.39946 , -3.626881 },{ -2.740809 , -2.843604 },{ 3.467054 , 5.86137 },{ -0.7661688 , -0.6203265 },{ 3.060105 , 4.075487 },
			{ 4.921341 , 5.447583 },{ -2.614891 , -4.74113 },{ 1.682373 , 3.412633 },{ 6.106114 , 2.283109 },{ 3.033898 , 3.41922 },{ -3.796776 , -3.910039 },
			{ -1.277451 , 1.177192 },{ 6.271102 , 2.409169 },{ 1.586189 , 4.960266 },{ -3.888376 , -2.729361 },{ -2.478916 , -4.443542 },{ 5.022503 , 3.481494 },{ 3.388639 , 4.611089 },{ 3.24104 , -0.4168576 },{ 3.295014 , 5.044705 },{ -2.660989 , -2.853824 },{ -3.805042 , -3.253782 },{ -0.7492498 , -4.490996 },{ 1.844839 , -0.9819171 },{ 4.501028 , 3.480698 },{ -0.8675661 , -0.5011876 },{ 3.180369 , 3.897805 },{ -3.332133 , -2.951355 },{ 4.821092 , 3.392057 },{ -2.621988 , -2.586471 },{ 3.313931 , 2.840259 },{ 3.351008 , 4.86358 },{ -0.6111659 , -1.18548 },{ 2.889872 , 4.356173 },{ -2.340476 , -3.588948 },{ -2.108952 , -3.367841 },{ 1.650907 , -0.05402813 },{ -2.482859 , -3.56779 },{ 3.640534 , 3.097305 },{ 3.747375 , 6.652487 },{ 2.973011 , 2.917778 },{ 0.2118099 , -0.9720175 },{ 4.754581 , 3.533173 },{ -2.763614 , -4.307726 },{ 5.028528 , 2.861918 },{ 3.988721 , 3.062756 },{ -0.7385277 , -0.5743887 },{ 0.9231292 , 0.693134 },{ -2.404298 , -3.846138 },{ 0.8924859 , 0.489462 },{ -1.137304 , -0.1790516 },{ 2.464617 , 4.74625 },
			{ 3.269258 , 4.580721 },{ -2.784694 , -4.171929 },{ 0.09049665 , 1.598509 },{ -4.185179 , -2.720119 },{ -0.1136399 , -1.532902 },{ -2.646599 , -4.518987 },{ 4.937147 , 6.069205 },{ 4.346526 , 4.817356 },{ 3.602185 , 4.147174 },{ 2.77459 , 3.616593 },{ 2.491946 , 5.051546 },{ -4.22276 , -1.562456 },{ -2.61294 , -3.139029 },{ 1.470972 , -0.8377676 },{ 3.719496 , 4.157091 },{ -1.707945 , -3.676543 },{ 3.757982 , 4.199361 },{ 4.929375 , 3.531647 },{ -0.577468 , 2.002483 },{ -3.989566 , -3.501358 },{ 3.831056 , 5.232253 },{ 0.4859265 , -0.4719126 },{ 3.02602 , 3.727631 },{ 2.340836 , 6.628513 },{ 4.913134 , 5.826299 },{ 5.140199 , 3.522034 },
			{ -3.423769 , -3.098513 },{ 4.909948 , 4.450652 },{ 1.684436 , 0.9113913 },{ -2.114381 , -3.586808 },{ 4.732522 , 3.38286 },{ 5.343844 , 3.95682 },{ 5.318943 , 3.804531 },{ 4.769644 , 4.423505 },{ 1.519218 , 0.377388 },{ 0.05345133 , -0.5739455 },{ -2.15996 , -3.421637 },{ 4.377364 , 5.108373 },{ -2.928489 , -3.069302 },{ 0.3445949 , -1.079854 },{ -3.833705 , -2.798321 },{ 3.198917 , 5.176096 },{ 4.250837 , 3.099437 },{ 3.958956 , 4.595874 },{ -6.255046 , 0.3128633 },{ -2.895657 , -2.16639 },{ 4.888719 , 4.652687 },
			{ -2.478397 , -2.105391 },{ -2.032377 , -3.750788 },{ 2.931152 , 4.402011 },{ -2.428739 , -2.839771 },{ -0.6763583 , -1.463758 },{ -2.336414 , -4.652 },{ -3.648009 , -2.769692 },
			{ -1.055017 , 0.4761333 },{ 4.747291 , 4.723678 },{ -0.4356455 , 0.3461036 },{ 0.9133362 , 0.3972292 },{ -3.551075 , -3.2174 },{ 4.109599 , 3.957594 },{ -4.033079 , -2.851616 },{ -2.684283 , -4.420806 },{ 3.869709 , 4.667305 },{ 0.5103739 , 1.195907 },{ -0.5388092 , 0.2272919 },{ 3.154235 , 6.41432 },{ -0.1227087 , -0.4136765 },{ 0.74515 , 0.5853398 },{ -2.29441 , -3.716479 },{ 4.80313 , 2.742347 },{ 1.272267 , -0.7184662 },
			{ -2.657624 , -2.70132 },{ -0.9438322 , -4.949328 },{ -4.566209 , -2.421152 },{ -1.005636 , 0.01925927 },{ -0.9550783 , 0.06872299 },{ 1.613257 , 5.55904 },{ 1.412273 , -1.042484 },{ 3.900326 , 3.392693 },{ -2.400244 , -3.154759 },{ 2.219767 , 2.694032 },{ 4.07372 , 4.192337 },{ -2.684647 , -2.421276 },{ -1.6239 , 0.1922969 },{ 4.272738 , 3.673263 },{ 2.129545 , 5.315181 },{ 3.779679 , 2.979159 },{ 3.145479 , 4.366634 },{ 0.06515393 , 1.125003 },{ 4.007366 , 3.797977 },{ -0.2393516 , -0.2140412 },{ -3.291363 , -4.197326 },{ 4.403237 , 3.718347 },{ -2.708809 , -3.952342 },{ -3.157182 , -2.385929 },{ 2.428117 , 3.648176 },{ 5.665851 , 3.376564 },{ -2.605673 , -2.910936 },{ 3.055128 , 3.302456 },{ -0.7594891 , -0.2529092 },{ 4.276103 , 4.490505 },{ 0.2375036 , 1.051259 },{ -1.734127 , -4.681104 },{ -3.386123 , -2.828788 },{ 4.160402 , 3.898924 },{ -2.143682 , -3.555606 },{ -2.576613 , -3.648413 },{ 0.1085818 , -1.12503 },{ -3.892837 , -2.777569 },{ 4.566787 , 3.964445 },{ -0.2759452 , 1.114649 },{ 4.915347 , 3.954959 },{ 0.4102751 , -0.5584569 },{ 3.119103 , 3.814735 },{ 3.831213 , 5.90389 },{ 4.891856 , 4.676975 },{ 3.429183 , 3.892455 },
			{ -3.793717 , -2.844352 },{ -1.197364 , 0.8663661 },{ 2.775918 , 3.098174 },{ 6.486641 , 3.080433 },{ 4.499417 , 4.55689 },{ -3.393238 , -1.565136 },{ 0.9397675 , -0.2761178 },{ -0.1972649 , -0.6295787 },{ -0.8676038 , -0.4859032 },{ 1.484031 , -1.186207 },{ -2.218205 , -3.187625 },{ 3.689683 , 4.124374 },{ 3.507963 , 5.699302 },{ -2.535224 , -3.532902 },{ 4.035983 , 5.343782 },{ -4.405721 , -2.405816 },{ -3.489864 , -3.341072 },{ 0.498658 , -1.038956 },{ -3.752165 , -1.627819 },{ -1.962559 , -4.439206 },{ -0.804607 , 1.108556 },{ -0.2858454 , 0.5041263 },{ 0.1385019 , 0.7262803 },{ 1.181181 , 1.859911 },{ 5.111099 , 4.386455 },{ 2.381545 , 5.011306 },{ -0.1772338 , -4.137496 },{ 3.832561 , 3.206264 },{ -3.404515 , -1.904973 },{ -0.01600253 , 1.074945 },{ -0.5901051 , 0.2242183 },{ -1.222926 , 1.546609 },{ -0.4628273 , -0.1503561 },{ 0.1781902 , -0.8752555 },{ 4.488966 , 0.9842454 },{ 2.311352 , 6.273196 },{ 0.2922544 , -1.051896 },{ 0.3102303 , -1.353834 },{ 0.5984434 , 0.1666631 },{ -2.224729 , -3.696845 },{ 1.048433 , 0.6938059 },{ 0.6297117 , -0.395798 },{ 3.90908 , 5.006439 },
			{ -2.688435 , -2.363574 },{ -0.03478088 , 0.9808236 },{ -4.524851 , -2.006549 },{ -0.3425191 , -0.7163987 },{ 0.7690523 , 0.1207193 },
			{ 3.641819 , 3.701564 },{ -2.176014 , -5.071395 },{ -3.544931 , -2.547196 },{ 0.5682886 , 1.010678 },{ -2.844972 , -3.585922 },{ 3.442299 , 4.173711 },{ -2.586932 , -1.963103 },{ -3.528159 , -3.319128 },{ 3.036053 , 3.993964 },{ -0.996839 , -1.041689 },{ -3.942865 , -2.392333 },{ 3.997824 , 1.994348 },
			{ -2.802838 , -4.186604 },{ -0.7889632 , -1.547777 },{ 4.504739 , 3.620854 },{ 4.660646 , 2.340829 },{ -0.7366961 , -0.007222639 },{ 4.324578 , 2.633061 },{ 5.552569 , 2.805682 },{ 4.110177 , 4.70507 },{ 3.973979 , 5.447068 },{ -0.08671413 , 1.441462 },{ 3.35468 , 4.913105 },{ -2.806928 , -2.767749 },{ 0.2865353 , -0.004113407 },{ 2.488147 , 4.233749 },{ -1.965322 , -4.342573 },{ 3.125946 , 5.086158 },{ 4.793014 , 3.030678 },{ 5.391873 , 3.732197 },{ 2.547949 , 3.968255 },{ 3.770944 , 5.018775 },{ 2.663281 , 5.066288 },{ 0.6644159 , 0.2073812 },{ -2.272712 , 0.7247251 },{ 6.290375 , 4.00992 },{ 6.34291 , 2.929158 },{ -2.731557 , -3.253196 },{ -1.126077 , -4.353728 },{ -4.812391 , -2.410987 },{ 1.840396 , 4.168045 },{ -1.692102 , 0.3687421 },{ 4.536388 , 3.708552 },{ -0.3218926 , 1.487838 },{ 0.7505261 , 0.1329321 },{ -1.617774 , 0.2796279 },{ 2.705635 , 3.943438 },{ -2.45483 , -3.437904 },{ 3.63334 , 3.314 },{ -1.176692 , -1.318221 },{ -1.922305 , -0.3620421 },{ 2.234739 , 3.640057 },
			{ 2.825795 , 2.967587 },{ 4.355405 , 3.780745 },{ 5.160724 , 4.048509 },{ 0.2311149 , 0.6475134 },{ 2.722875 , 5.081635 },{ 1.152936 , 0.2762746 },{ -3.292449 , -1.124026 },{ -2.684348 , -3.251009 },{ -1.979553 , 0.7210988 },{ 4.161887 , 4.242359 },{ 3.949866 , 4.391019 },{ 3.272548 , 2.945401 },{ 0.9505033 , 1.586521 },{ 4.821297 , 3.615533 },{ 0.5894553 , -0.2983661 },{ -3.537634 , -3.892825 },{ 2.181014 , 4.63058 },{ -1.523559 , -3.750864 },{ 4.046129 , 4.629621 },{ 4.010175 , 4.287092 },{ 0.0979635 , -0.4429069 },{ 0.06424356 , 0.6497919 },{ -4.715247 , -1.412751 },{ 5.60134 , 3.725479 },{ 2.413265 , 5.711851 },{ 2.505015 , 6.469437 },{ -1.524381 , 1.143147 },{ 3.898612 , 5.582552 },{ 3.764739 , 3.568129 },{ 3.168773 , 3.970034 },{ 3.635436 , 5.532798 },{ 3.226045 , 5.726707 },{ 1.864616 , -2.551407 },{ 0.9035164 , 1.483779 },{ 4.871472 , 4.168194 },{ -1.796227 , -3.593309 },{ 1.932573 , 4.307347 },{ 5.124678 , 4.349724 },{ 4.313041 , 4.199259 },{ -3.857303 , -2.344976 },{ -0.6065333 , 0.2880706 },{ 1.82853 , 0.4605913 },{ -1.80996 , 0.9789236 },{ -2.748468 , -2.914858 },{ 1.0188 , 0.4395632 },{ 1.639052 , 1.084617 },{ 0.2465653 , 0.4938276 },{ -2.819481 , -2.872876 },{ 3.595478 , 5.147108 },{ 2.151127 , 4.85313 },{ 4.125236 , 3.196016 },{ -3.220253 , -1.680939 },{ -3.329882 , -2.279127 },{ 0.3650188 , 0.6651599 },
			{ 5.261076 , 2.391688 },{ -0.8596384 , -3.541506 },{ -2.956028 , -2.161857 },{ -0.2213262 , -0.01104583 },
			{ 0.9042113 , -0.3327906 },{ 3.580355 , 5.384839 },{ 3.048338 , 3.481435 },{ 3.234667 , 3.675713 },{ -1.054346 , -3.309465 },{ -2.793118 , -4.020914 },{ -3.985435 , -1.721953 },{ -2.918139 , -2.759131 },{ 0.1640593 , 0.3280606 },{ -1.421108 , 0.9553656 },{ 3.966763 , 4.002938 },{ -2.99325 , -2.928251 },{ -2.474395 , -4.585877 },{ -0.07753897 , -0.5810674 },{ -3.679755 , -2.386576 },{ 2.761632 , 5.141796 },{ 0.7175688 , -0.6189653 },{ -3.354147 , -2.742433 },{ 3.436919 , 3.317107 },{ -4.050181 , -1.404487 },{ 1.164855 , 0.1063554 },{ 2.702485 , 5.796654 },{ 4.023563 , 3.201884 },{ -0.2133071 , 0.3132288 },
			{ -3.51856 , -3.566367 },{ 3.521253 , 3.833007 },{ -1.060248 , 0.03618922 },
			{ 4.256238 , 1.500243 },{ 3.344497 , 4.366698 },{ 0.6851982 , -0.4469593 },{ 3.975424 , 3.180143 },{ 0.469032 , -0.2112469 },{ -2.530478 , -3.779803 },{ 4.01682 , 5.685647 },{ -4.136055 , -1.985117 },{ 5.138163 , 2.23426 },{ -3.832765 , -3.418397 },{ 0.4199516 , 0.7212208 },{ 1.042032 , 0.9798161 },{ -0.4580181 , 0.9356037 },{ 1.361598 , -0.2526091 },{ 3.777745 , 5.79275 },{ 0.5153308 , -1.235193 },{ 3.671759 , 4.498299 },{ -0.5208038 , -1.928838 },{ 5.723005 , 3.789276 },{ 3.355649 , 5.832477 },{ 2.883621 , 5.288924 },{ 3.429254 , 4.073478 },{ 0.7163316 , 0.557731 },{ 4.531429 , 3.167378 },{ 1.036548 , -0.1624831 },{ -0.3086645 , -1.03763 },{ -3.738454 , -1.32605 },{ 3.348307 , 2.511671 },{ -0.5824017 , 0.3428884 },{ -0.9460734 , -4.602465 },{ -2.82155 , -3.636384 },{ 2.778914 , 4.704354 },{ 2.227605 , 4.908903 },{ -0.128529 , -0.1851681 },{ -0.4527006 , -1.748372 },{ 4.4232 , 3.852159 },{ 1.017249 , -0.6309679 },{ 2.84051 , 5.604885 },{ 4.515655 , 3.684487 },{ 4.883638 , 1.847387 },{ -4.357417 , -2.322038 },{ -2.119024 , -4.312075 },{ -1.319997 , 0.1612264 },{ 0.3384841 , -1.631849 },{ -0.9159792 , 1.057664 },{ 5.004984 , 4.2129 },{ -0.7834279 , -5.452175 },{ 0.3964331 , 1.869827 },{ 3.891128 , 3.510346 },{ 6.093227 , 4.367361 },{ 0.2998653 , -1.568425 },{ 5.251369 , 2.70245 },{ -0.9823706 , -1.022984 },{ -0.4905711 , -1.872817 },{ 5.584665 , 3.605278 },{ -1.834167 , -3.469736 },{ 0.09690423 , 0.2900344 },{ 1.290196 , -0.1972598 },{ -0.5486274 , 0.3030457 },{ -1.95993 , -3.186915 },{ 0.1731049 , 1.399783 },{ -5.518338 , -1.699979 },
			{ 2.954994 , 3.35371 },{ 3.99123 , 4.503219 },{ -0.1152217 , -0.6505126 },{ -0.8026032 , 0.5738749 },{ -1.288716 , 1.482403 },{ 2.786766 , 5.555852 },{ 0.1667813 , -0.100014 },{ 4.825674 , 4.464603 },{ -1.778659 , -0.7776214 },{ -2.95289 , -2.049344 },{ -0.467926 , 0.6069301 },{ 3.784174 , 3.962483 },{ 1.439761 , -2.198923 },{ -5.110444 , -2.378798 },{ 0.1565953 , -0.863609 },{ -5.122166 , -2.189536 },{ 3.146266 , 4.490982 },{ 4.065948 , 5.321513 },{ -3.930688 , -2.133774 },{ 4.790608 , 1.703 },{ -0.4895329 , 0.2943534 },{ -2.004354 , -3.638149 },{ -4.087642 , -2.660858 },{ 3.62648 , 4.688448 },{ -3.474931 , -4.031869 },{ 3.55383 , 2.551543 },{ 3.429098 , 3.710645 },{ 3.479091 , 4.804587 },{ 4.338759 , 4.297701 },{ 0.2693959 , -0.844574 },{ -4.612387 , -2.498808 },{ -0.9403772 , 0.2232327 },{ -2.750424 , -2.323199 },{ -0.4958686 , -0.6603714 },{ -0.784144 , -0.6524044 },{ 3.162393 , 5.456975 },{ 5.329672 , 4.169428 },{ 4.497162 , 3.458039 },{ -3.130767 , -1.950479 },{ -0.6139664 , -0.7141812 },{ 3.870466 , 4.091312 },{ 4.48068 , 3.038522 },{ 3.679907 , 4.120177 },{ 4.122627 , 3.982256 },{ -0.00763687 , 1.125668 },{ 2.884308 , 4.851421 },{ 3.739907 , 3.9347 },{ -3.85506 , -2.820718 },{ -3.074597 , -3.023825 },{ -1.907969 , -3.574296 },{ 1.920186 , 3.002103 },{ -2.881607 , -3.13664 },{ -1.991538 , -0.3543692 },{ 2.881962 , 3.142812 },{ -1.649024 , -3.487652 },{ -1.755512 , -4.479643 },{ 3.811017 , 4.905774 },{ 0.3064209 , 1.205384 },{ 0.3543522 , 0.4247998 },{ 3.620438 , 3.819482 },{ 3.066935 , 4.142888 },{ 2.908976 , 4.668891 },{ -3.513117 , -3.159594 },{ 4.667729 , 3.817441 },{ 1.265168 , 0.3603572 },{ 1.597746 , -0.9256547 },{ 7.319616 , 3.690562 },{ 5.510065 , 1.568436 },{ 3.914975 , 2.34618 },{ -0.6038329 , -0.922031 },{ 3.805351 , 3.921252 },{ -0.9714858 , -1.069652 },{ -0.2085702 , -0.4385635 },{ -3.91044 , -1.489475 },{ 3.456592 , 2.616788 },{ -0.4718066 , 0.2126865 },{ 3.100851 , 4.431488 },{ -2.574667 , -2.917002 },{ 4.737812 , 4.758294 },{ 4.059583 , 3.601905 },{ 3.178492 , 4.52037 },{ 2.551979 , 5.548973 },
			{ 4.936452 , 2.728875 },{ -2.223176 , -3.460229 },{ -2.751003 , -2.733639 },{ -3.015228 , -4.671986 },{ 2.738715 , 3.287508 },{ 2.809836 , 4.309532 },{ -4.329661 , -1.978233 },{ 3.497 , 3.769879 },{ -2.725827 , -2.618767 },{ -0.3512651 , -0.2445513 },{ 4.896493 , 2.716293 },{ -3.184508 , -1.377216 },{ -2.113646 , -2.754348 },{ -0.08577912 , -0.08670636 },{ -2.630501 , -3.587585 },{ 0.1438591 , -1.449449 },{ 3.538796 , 4.290487 },{ 3.572878 , 4.976392 },{ -1.70158 , -0.2806763 },{ -3.71063 , -1.802726 },{ -2.369861 , -3.020209 },{ 4.024993 , 4.858273 },{ -2.388216 , -2.749792 },{ -3.4487 , -2.350968 },{ 4.751177 , 3.311216 },{ 3.669426 , 2.322725 },{ -2.986969 , -3.221026 },{ 3.26029 , 3.693035 },{ 4.798045 , 1.276162 },{ 2.886274 , 3.164758 },{ 3.656806 , 3.381997 },{ -2.633769 , -2.936258 },{ 4.499866 , 4.25251 },{ 1.664943 , -0.951797 },{ -2.476506 , -3.240578 },{ 4.236816 , 3.41092 },{ 5.394916 , 3.302577 },{ 3.916133 , 3.522284 },{ 4.689906 , 4.300531 },{ 0.2483759 , -0.7180088 },{ 0.6342503 , 0.423645 },{ -3.510362 , -3.808272 },{ -2.527277 , -3.833386 },{ -1.413212 , -4.82549 },{ 4.129944 , 2.24464 },{ 0.3055693 , -0.8564692 },{ 2.186883 , 4.169452 },{ 3.15481 , 3.963387 },{ 1.183746 , -0.7715014 },{ 3.929192 , 2.639155 },{ -1.316392 , -2.939714 },{ 3.398273 , 3.247284 },{ 6.423578 , 2.57273 },{ -3.15482 , -3.379101 },{ 1.089112 , -0.163129 },{ 1.576451 , 0.3219115 },{ 4.449783 , 5.012216 },{ 4.683295 , 2.260309 },{ 1.024475 , 0.9047589 },{ -2.287552 , -3.629543 },{ 5.160851 , 3.536954 },{ 3.927535 , 3.234731 },{ -2.978278 , -3.274752 },{ -4.27313 , -3.412455 },{ 3.688959 , 4.039888 },{ -3.267725 , -4.131825 },{ 3.706854 , 4.654502 },{ 3.218802 , 2.347665 },{ 3.633131 , 4.456184 },{ 4.915597 , 3.43323 },{ 4.10375 , 4.687909 },
			{ 2.80959 , 3.503819 },{ 1.394663 , 0.1645341 },{ 4.760935 , 3.006492 },{ 2.488875 , 4.123541 },{ -1.273394 , -3.272501 },{ -2.467818 , -2.512149 },{ -0.9793584 , 0.4605189 },{ 2.881365 , 4.678835 },{ -0.4100857 , 1.41538 },{ 4.609404 , 3.401073 },{ 0.4686513 , -0.7848361 },{ -0.2390678 , 0.06923533 },{ 3.648058 , 3.575451 },{ -0.6196151 , -1.584991 },{ 5.080841 , 3.158119 },{ -0.04334735 , -0.5101604 },{ -0.2665223 , -0.7443887 },{ 4.555484 , 3.14975 },{ 2.11376 , 5.187625 },{ 1.769366 , 0.6682826 },{ 1.048785 , -0.4133164 },{ 2.844702 , 4.379848 },{ -3.046159 , -1.962149 },{ 1.650149 , 5.169767 },{ -2.73862 , -3.439002 },{ -2.903164 , -4.358922 },{ -4.705248 , -2.054658 },{ -1.794697 , -2.786407 },{ 2.536739 , 4.434458 },{ 3.505095 , 3.561641 },{ -0.3917853 , 0.07951623 },{ -2.080631 , -3.302055 },{ 0.1693495 , 1.408132 },{ 5.455367 , 3.450647 },{ -5.304761 , -2.246967 },{ -0.3114745 , 0.8536157 },{ -0.6736305 , 0.4171729 },{ 5.125424 , 3.66849 },{ -3.258062 , -3.336041 },{ 3.047448 , 4.559192 },{ -1.055282 , 0.2720364 },{ -2.076773 , -2.521525 },{ -0.9706632 , -1.292346 },{ 0.9525565 , -0.2905679 },{ -0.4968398 , 0.1563745 },{ -2.093804 , -4.003575 },{ 0.753756 , 1.067264 },{ 0.8880737 , -1.93994 },{ 4.004343 , 3.219902 },{ -4.278519 , -2.992148 },{ -4.253789 , -2.242929 },{ 0.4350905 , 1.604212 },{ -1.527973 , -3.747853 },{ 3.200257 , 5.013959 },{ 2.553081 , 4.188047 },{ 3.326581 , 5.433013 },{ 3.62499 , 5.110138 },{ -1.5268 , -4.225476 },{ 4.121008 , 5.679748 },{ 2.651913 , 4.338521 },{ 3.538263 , 3.020801 },{ 1.764546 , -0.4338993 },{ 3.468531 , 3.911265 },{ 4.08457 , 3.997595 },{ -3.457558 , -3.353973 },{ 1.868656 , 1.790424 },{ 0.1575442 , 1.093415 },{ 4.792993 , 5.110317 },{ 0.2007874 , 0.08402028 },{ 0.7539163 , 0.141276 },{ -3.373862 , -2.606017 },{ 1.62266 , 0.08951323 },{ 4.570951 , 3.97643 },{ -1.134021 , 0.2537263 },{ -0.4962106 , -0.6716213 },{ -4.039145 , -2.492962 },{ 4.45566 , 3.049977 },{ 5.039295 , 2.885416 },
			{ -3.523597 , -2.216651 },{ 3.735172 , 4.337653 },{ -2.627671 , -3.332404 },{ 1.88284 , 0.8736687 },{ -1.52223 , 1.028677 },{ 5.268968 , 4.087637 },{ -0.2255436 , -0.307737 },{ -4.211861 , -2.149354 },{ 2.494276 , 3.951169 },{ -0.6562431 , 0.5683985 },{ 0.1868519 , -0.1636391 },{ -3.926156 , -0.7973969 },{ 1.08673 , 0.4768876 },{ -2.023326 , -3.407115 },{ 1.313531 , 0.101635 },{ 4.787413 , 1.905943 },{ 3.714896 , 4.91523 },{ 4.005075 , 3.854656 },{ 3.790896 , 4.464654 },{ 3.049057 , 4.339169 },{ 3.972885 , 6.556099 },{ 2.913451 , 4.219706 },{ 3.834911 , 4.989955 },{ -1.034808 , 0.1645187 },{ -2.626531 , -3.360968 },{ 4.601213 , 2.912497 },{ 0.3145543 , -0.05199443 },{ 5.001283 , 5.378347 },{ 4.412106 , 3.239169 },{ 0.04805308 , -1.404546 },{ 4.491432 , 3.580059 },{ 3.758431 , 3.398553 },{ -3.592662 , -2.38885 },{ -2.969826 , -2.6787 },{ -1.214862 , -0.1970968 },{ 3.106736 , 4.435414 },{ 2.863472 , 4.916274 },{ 3.673653 , 5.132167 },{ -2.903117 , -1.836954 },{ -4.00289 , -2.622342 },{ 3.55761 , 5.555251 },{ 5.556294 , 2.657618 },
			{ 5.227159 , 4.969313 },{ 0.9286627 , 0.8683396 },{ -0.8356606 , -0.7584699 },{ 0.3395437 , -1.559075 },{ -1.070395 , -0.9867409 },{ 3.434734 , 4.821342 },{ -3.751743 , -2.337518 },{ 0.203664 , -1.799136 },{ 3.206797 , 5.455599 },{ -3.13889 , -3.041078 },{ 4.663869 , 2.759796 },{ 5.264696 , 5.117096 },{ 2.60416 , 3.254818 },{ 3.340599 , 4.637079 },{ 4.145555 , 2.607584 },{ -2.994594 , -2.497102 },{ -2.207349 , -2.026801 },{ 3.153169 , 4.618235 },{ 5.897071 , 2.607089 },{ 5.184091 , 3.087624 },{ -2.14714 , -1.654298 },{ -0.2425833 , 0.7595407 },{ -0.1897377 , 1.333685 },{ 3.611106 , 4.768201 },{ 4.031386 , 3.855948 },{ 5.667735 , 3.426379 },{ 0.5517418 , -2.178217 },{ -4.461581 , -1.307128 },{ 4.55771 , 4.138704 },{ 3.885422 , 4.154453 },{ 3.001232 , 4.107212 },{ 3.430913 , 4.749576 },{ -0.5222329 , -0.73179 },{ 4.050565 , 3.808518 },{ 3.494813 , 2.395214 },{ 0.6981358 , -0.8270146 },{ -3.119761 , -2.483891 },{ 2.642462 , 4.824134 },{ 0.9520828 , -0.4283014 },{ -2.251045 , -1.779014 },{ 2.917453 , 4.964358 },{ -0.1682502 , 0.4277757 },{ 3.998588 , 1.43751 },{ -4.448935 , -0.23599 },{ -3.97298 , -2.698917 },{ -3.745096 , -1.632163 },{ -1.756329 , -5.101385 },{ 3.275974 , 6.001891 },{ 0.09525756 , -1.22826 },{ -0.9877968 , -5.363873 },{ 5.732794 , 0.04219349 },{ 3.211206 , 4.307882 },{ 2.499225 , 4.020797 },{ -1.119072 , -4.637739 },{ 6.564804 , 2.232988 },{ -3.914425 , -2.022363 },{ -2.724226 , -2.730176 },{ -1.714488 , 1.047827 },{ 1.220926 , 0.858956 },{ 3.517329 , 5.56961 },{ 0.3232208 , -1.097253 },{ 3.466013 , 2.846627 },{ -4.29102 , -0.7532358 },
			{ 0.536856 , -0.4604856 },{ -2.434292 , -2.561745 },{ 1.219228 , 0.1741359 },
			{ 2.143414 , -0.6495966 },{ 6.107421 , 3.135233 },{ 0.727651 , -0.003856744 },{ 4.785108 , 3.611179 },{ 3.795817 , 4.323522 },{ 3.200705 , 4.779733 },{ -2.766164 , -3.104501 },{ 0.1406555 , -0.5346167 },
			{ 0.2088545 , -0.5084432 },{ 6.140083 , 2.581697 },{ -0.8345114 , -0.6252578 },{ 4.949388 , 2.977971 },{ -2.284432 , -4.161723 },{ 5.123968 , 3.526043 },{ -5.034581 , -1.394286 },{ 3.606081 , 4.615301 },{ -2.851026 , -4.341157 },{ -3.293973 , -3.647087 },{ -5.217454 , 0.2333129 },{ -1.579156 , -3.589423 },{ 3.60986 , 4.30031 },{ -2.887168 , -2.863568 },{ 5.013992 , 3.42347 },{ 4.317628 , 4.125747 },{ -0.04804149 , 1.494442 },{ -2.063714 , -0.6015219 },{ 4.59971 , 3.043709 },{ 3.335892 , 4.32949 },{ -2.200519 , 0.8508171 },{ -3.168381 , -3.538467 },{ -1.177536 , -0.5450622 },{ -0.119774 , -0.3008526 },{ 1.105308 , -0.9074196 },{ 3.25305 , 3.345708 },{ 4.475139 , 4.949685 },{ -3.3262 , -3.086564 },{ 0.379658 , 0.7467497 },{ 0.7411947 , 0.226852 },{ -4.538067 , -2.368234 },{ -3.302406 , -2.524901 },{ 0.9399253 , 0.01272898 },{ 4.139172 , 4.323487 },{ -2.975356 , -3.535532 },{ -3.255115 , -1.849163 },{ 0.1317783 , 1.538579 },{ -3.559419 , -2.677771 },{ -1.681282 , -4.575743 },{ 0.8463078 , 1.02414 },{ 3.47104 , 5.430581 },{ 4.162573 , 4.583141 },{ -3.356607 , -2.454092 },{ 5.845668 , 1.295948 },{ -2.085944 , -3.411885 },{ 0.3854259 , -1.967088 },{ 4.527855 , 4.496084 },{ 3.220683 , 4.27608 },{ -0.3613803 , -0.8778488 },{ -1.058901 , -0.08584955 },{ 7.55385 , 5.065216 },{ 5.626132 , 4.187683 },{ -1.975755 , -4.18578 },{ 3.576639 , 4.752426 },{ -3.451458 , -2.676318 },{ -0.2741297 , 0.217006 },{ -1.723567 , -3.34766 },{ -2.622795 , -3.216564 },{ -1.510416 , -3.837502 },{ -3.772029 , -3.923371 },{ -4.049627 , -0.7067713 },{ -2.157739 , -3.001144 },{ 2.660578 , 4.280401 },{ 5.072417 , 3.83651 },{ -0.6378728 , 0.9007818 },{ 3.345734 , 4.422266 },{ -3.184505 , -3.201983 },{ -2.716586 , -2.954069 },{ 5.55353 , 4.098685 },{ 0.1659031 , 0.7053346 },{ 6.701499 , 2.672008 },{ -2.667406 , -2.147443 },{ -0.4996191 , -0.8230274 },{ 2.954366 , 4.762159 },{ -2.774602 , -2.544208 },{ 5.673225 , 4.385181 },{ -4.533326 , -3.148547 },{ 3.650875 , 5.408008 },{ -4.263343 , -2.041789 },{ -2.298026 , -0.8802125 },
			{ -3.737404 , -2.285397 },{ 4.419201 , 3.004474 },{ 0.2187623 , -1.701851 },{ 4.839326 , 4.44409 },{ 4.52019 , 3.914424 },{ -2.409307 , -4.05049 },{ -0.7547637 , 1.409276 },{ -0.3213584 , -0.9964912 },{ -2.24487 , -0.8219112 },{ 0.5491609 , -1.545892 },{ -0.2468669 , 0.3177039 },{ -5.132027 , -1.524888 },{ 2.365553 , 4.630932 },{ -1.133973 , 0.3164269 },{ -2.211452 , -2.777915 },{ -1.062081 , 0.4363743 },{ 4.329588 , 5.279797 },{ -4.854305 , -1.833248 },{ -2.604186 , -4.692358 },{ 2.94322 , 5.266363 },{ -1.756529 , -4.610579 },{ 0.3900197 , -0.2072156 },{ -0.1881986 , -1.57826 },{ 3.428182 , 4.527856 },{ -1.439717 , -4.093562 },{ 4.538609 , 4.550465 },{ -0.3235996 , 1.64859 },{ 3.456364 , 4.520475 },{ -4.585252 , -1.60052 },{ -0.6482993 , 0.07196084 },{ -1.559017 , -4.139304 },{ 0.4113519 , -0.7761839 },{ 3.3658 , 4.686318 },{ 3.827483 , 2.267187 },
			{ -3.677022 , -2.096562 },{ -3.717641 , -3.565616 },{ -2.759517 , -3.316775 },{ 4.953834 , 2.919342 },{ -1.581569 , 0.3915041 },{ 0.8281116 , 0.3358507 },{ -1.545991 , 1.022558 },{ -1.561462 , -3.162104 },{ 4.768404 , 2.90424 },{ -3.726247 , -3.134259 },{ -2.374225 , -4.218101 },{ -0.177972 , 0.1834855 },{ -5.332731 , -1.634401 },{ 4.829347 , 3.917961 },{ -4.021628 , -2.828853 },{ 3.085044 , 3.127784 },{ 0.8595508 , -0.8365439 },{ 2.719545 , 5.319787 },{ 1.168127 , 4.047759 },{ -0.422872 , -0.0980529 },{ 3.708828 , 3.754039 },{ 3.650946 , 3.073453 },{ -1.831035 , -3.370276 },{ 5.169304 , 3.585851 },{ -3.290806 , -2.493617 },{ 5.576961 , 4.049197 },{ 4.954236 , 4.999915 },{ -1.742414 , -4.614423 },{ 0.1415275 , 0.6327194 },{ 1.290734 , -0.4937239 },{ 4.164013 , 4.724962 },{ -0.1349676 , 0.3502562 },{ -3.04214 , -3.072948 },{ 0.5456355 , -0.2884493 },{ -0.05042814 , 0.04443762 },{ 1.380517 , 0.8726346 },{ -2.769514 , -3.999942 },{ -0.4116979 , 0.7091856 },{ 2.896633 , 3.302856 },{ 3.954676 , 4.151667 },{ -0.1704941 , 0.8643054 },{ -0.8857226 , -5.416118 },{ -0.6338556 , -1.023722 },{ 0.3308392 , -0.3206892 },{ 0.211517 , -0.9152734 },{ 3.55348 , 5.634832 },{ 0.6527591 , -1.096926 },{ -1.240228 , 0.6359479 },{ 0.9966081 , -2.065142 },{ 4.069654 , 3.925082 },{ 4.850794 , 1.738664 },{ -3.686937 , -3.520746 },{ 0.05690934 , 0.04170706 },{ -0.7571986 , 0.7920595 },{ 3.534738 , 3.586762 },{ 4.34202 , 3.942812 },{ 5.467728 , 5.070796 },{ -3.443384 , -2.44449 },{ -2.3567 , -3.318475 },{ -1.998209 , -4.61536 },{ -3.613591 , -3.39806 },{ 3.535262 , 4.430373 },{ -3.450127 , -1.886156 },{ -2.110347 , -3.613614 },{ -2.876622 , -1.000441 },{ -2.493468 , -4.469849 },{ 2.818603 , 4.552464 },{ 3.963538 , 5.327218 },{ 4.926921 , 3.656827 },{ -4.071035 , -3.124009 },{ 3.465099 , 4.929784 },{ 3.522951 , 2.754292 },{ 2.257503 , 4.702194 },{ -1.586237 , -4.425549 },{ 2.253868 , 4.727373 },{ 1.451281 , 0.6415514 }};

	static const arma::vec ci_mvn = {0, 0, 2, 2, 2, 2, 2, 1, 0, 0, 0, 0, 2, 1, 2, 0, 0, 1, 0, 0, 1, 2, 2, 0, 2, 2, 2, 2, 1, 0, 2, 1, 1, 1, 2, 2, 2, 1, 0, 1, 0, 2, 1, 2, 0,
			1, 2, 1, 1, 2, 0, 2, 2, 1, 2, 2, 2, 1, 0, 2, 2, 1, 1, 2, 2, 0, 2, 1, 1, 1, 0, 2, 0, 2, 1, 2, 1, 2, 2, 0, 2, 1, 1, 0, 1, 2, 2, 2, 0, 2, 1, 2, 2, 0,
			0, 1, 0, 0, 2, 2, 1, 0, 1, 0, 1, 2, 2, 2, 2, 2, 1, 1, 0, 2, 1, 2, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 2,
			0, 1, 2, 2, 2, 2, 0, 0, 1, 2, 1, 0, 1, 2, 2, 2, 1, 1, 2, 1, 1, 2, 1, 0, 1, 1, 0, 2, 0, 0, 1, 2, 1, 1, 2, 0, 0, 2, 0, 0, 1, 2, 0, 1, 1, 1, 0, 0, 2,
			0, 2, 1, 2, 2, 1, 0, 2, 2, 2, 2, 0, 2, 0, 1, 2, 1, 1, 2, 2, 1, 2, 0, 2, 0, 1, 1, 2, 1, 1, 0, 1, 2, 0, 2, 0, 2, 2, 2, 2, 1, 0, 2, 2, 2, 1, 0, 0, 0,
			0, 1, 2, 2, 1, 2, 1, 1, 0, 1, 1, 0, 0, 0, 0, 2, 2, 1, 2, 1, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 1, 0, 0, 2, 1, 0, 1, 0, 0, 2, 1, 1, 0, 1, 2, 0, 1, 2, 0,
			1, 2, 1, 0, 2, 2, 0, 2, 2, 2, 2, 0, 2, 1, 0, 2, 1, 2, 2, 2, 2, 2, 2, 0, 0, 2, 2, 1,
			1, 1, 2, 0, 2, 0, 0, 0, 2, 1, 2, 0, 0, 2, 2, 2, 2, 0, 2, 0, 1, 1, 0, 2, 2, 2, 0, 2, 0, 1, 2, 1, 2, 2, 0, 0, 1, 2, 2, 2, 0, 2, 2, 2, 2, 2, 0, 0, 2,
			1, 2, 2, 2, 1, 0, 0, 0, 1, 0, 0, 0, 1, 2, 2, 2, 1, 1, 0, 2, 1, 1, 0, 0, 2, 2, 2, 1, 1, 1, 1, 0, 0, 2, 1, 1, 0, 1, 2, 0, 1, 2, 1, 0, 2, 2, 0, 1, 2,
			0, 2, 2, 0, 2, 0, 1, 2, 1, 2, 1, 0, 0, 0, 0, 2, 0, 2, 0, 2, 2, 2, 2, 0, 2, 0, 0, 1, 2, 0, 1, 1, 2,
			2, 0, 0, 2, 0, 2, 2, 2, 1, 1, 0, 0, 0, 2, 1, 0, 2, 2, 0, 2, 0, 0, 2, 1, 0, 0, 0, 1, 0, 1, 2, 2, 0, 0, 0, 2, 0, 2, 0, 1, 0, 2, 0, 1, 0, 1, 2, 2, 1,
			2, 0, 1, 1, 2, 1, 2, 2, 2, 2, 0, 1, 0, 1, 0, 0, 2, 2, 2, 1, 0, 2, 2, 2, 2, 0, 2, 2, 1, 1, 1, 2, 1, 0, 2, 1, 1, 2, 0, 0, 2, 2, 2, 1, 2, 0, 0, 2, 2,
			2, 0, 2, 0, 0, 1, 2, 0, 2, 1, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 1, 2, 1, 0, 2, 1, 1, 0, 1, 0, 2, 2, 0, 1, 1, 2, 1, 1, 2, 2, 1, 2, 2, 2, 2, 1, 2, 0, 1,
			2, 2, 2, 2, 0, 0, 1, 1, 1, 2, 0, 2, 2, 0, 2, 1, 2, 2, 1, 0, 0, 2, 2, 0, 1, 2, 2, 1,
			1, 2, 1, 2, 2, 2, 2, 2, 2, 0, 2, 2, 1, 1, 0, 2, 0, 2, 0, 0, 2, 0, 2, 0, 0, 2, 2, 0, 0, 2, 1, 2, 1, 1, 1, 1, 2, 2, 0, 1, 0, 2, 1, 0, 0, 2, 1, 2, 0,
			1, 0, 0, 0, 1, 0, 0, 2, 1, 1, 0, 1, 2, 2, 2, 2, 1, 2, 2, 2, 0, 2, 2, 1, 0, 0, 2, 0, 0, 1, 0, 2, 0, 0, 1, 2, 2, 1, 2, 1, 0, 0, 2, 0, 1, 2, 0, 0, 1,
			0, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2, 0, 1, 2, 0, 2, 2, 0, 2, 2, 1, 1, 0, 2, 2, 2, 1, 1, 2, 2, 2, 0, 0,
			0, 0, 2, 1, 0, 2, 1, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 0, 0, 0, 2, 2, 2, 0, 1, 2, 2, 2, 2, 0, 2, 2, 0, 1, 2, 0, 0, 2, 0, 2, 1, 1, 1, 1, 2, 0, 1, 2, 2,
			2, 1, 2, 1, 1, 0, 0, 2, 0, 2, 1, 0, 1, 0, 0, 2, 0, 2, 2, 2, 1, 0, 0, 2, 0, 2, 1, 2, 1, 2, 1, 1, 1, 1, 2, 1, 2, 2, 0, 0, 2, 2, 0, 1, 0, 0, 0, 2, 2,
			1, 0, 0, 1, 1, 0, 2, 1, 1, 0, 1, 1, 0, 2, 2, 1, 2, 1, 0, 2, 2, 0, 0, 2, 2, 1, 2, 1, 0, 1, 1, 1, 1, 1, 1, 2, 2, 0, 2, 1, 1, 2, 0, 2, 1, 0, 2, 1, 2,
			1, 2, 1, 0, 1, 2, 0, 2, 2, 1, 0, 0, 0, 0, 0, 1, 2, 0, 1, 0, 2, 1, 1, 2, 1, 0, 0, 2,
			1, 2, 0, 2, 1, 0, 1, 0, 2, 2, 1, 1, 1, 2, 0, 0, 0, 1, 2, 1, 1, 0, 1, 2, 1, 2, 0, 2, 2, 0, 2, 2, 1, 2, 1, 2, 2, 1, 0, 0, 2, 0, 1, 0, 0, 0, 1, 0, 2,
			2, 0, 1, 0, 0, 0, 2, 0, 0, 0, 2, 2, 1, 0, 0, 2, 2, 2, 1, 1, 1, 1, 2, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 0};

	PriorPoisson *prior = new PriorPoisson(poisson_gamma_h_param_t(2,1,1,0.00001),poisson_gamma_q_param_t(3,1,1));
	MixtureMultivariateNormal * mixture = new MixtureMultivariateNormal ((arma::vec){0,0}, 1, 4, arma::eye(2,2));
	cluster_indices_t initial_clustering  = arma::regspace<arma::ivec>(0,  y_mvn.n_rows -1);

	AntMANLogger logger (std::vector<std::string>(), (niter - burnin) / thin );
	auto start_gibbs           = std::chrono::system_clock::now();
	mixture->fit(y_mvn , initial_clustering, false, prior , niter ,burnin ,thin , false , &logger);
	auto end_gibbs             = std::chrono::system_clock::now();
	auto elapsed_gibbs         = end_gibbs - start_gibbs;
	auto total_gibbs           = elapsed_gibbs.count() / 1000000.0;
	VERBOSE_INFO ( getString (logger)) ;
	COUT_STREAM << "Total time: " << total_gibbs << "ms"  << std::endl ;
}


void test_Mixture_UnivariateNormal(long niter, long burnin, long thin) {


	static const arma::vec y_uvn =  { 9.172,  9.350,  9.483,  9.558,  9.775, 10.227, 10.406, 16.084, 16.170, 18.419,18.552,
			18.600, 18.927, 19.052, 19.070, 19.330, 19.343, 19.349, 19.440, 19.473,19.529, 19.541, 19.547, 19.663,
			19.846, 19.856, 19.863, 19.914, 19.918, 19.973,19.989, 20.166, 20.175, 20.179, 20.196, 20.215, 20.221,
			20.415, 20.629, 20.795,20.821, 20.846, 20.875, 20.986, 21.137, 21.492, 21.701, 21.814, 21.921, 21.960,
			22.185, 22.209, 22.242, 22.249, 22.314, 22.374, 22.495, 22.746, 22.747, 22.888,22.914, 23.206, 23.241,
			23.263, 23.484, 23.538, 23.542, 23.666, 23.706, 23.711,24.129, 24.285, 24.289, 24.366, 24.717, 24.990, 25.633, 26.960,
			26.995, 32.065,32.789, 34.279 };
	// TODO : Need to go over variable and see what should be checked
	PriorPoisson *prior = new PriorPoisson(poisson_gamma_h_param_t(2,1,1,0.00001),poisson_gamma_q_param_t(3,1,1));
	MixtureUnivariateNormal * mixture = new MixtureUnivariateNormal (20.83146, 0.3333333, 4.222222, 3.661027);
	cluster_indices_t initial_clustering (y_uvn.size());
	AntMANLogger * logger = new AntMANLogger(std::vector<std::string>(), (niter - burnin) / thin );

	auto start_gibbs           = std::chrono::system_clock::now();
	mixture->fit(y_uvn , initial_clustering, false, prior , niter ,burnin ,thin , false , logger);
	auto end_gibbs             = std::chrono::system_clock::now();
	auto elapsed_gibbs         = end_gibbs - start_gibbs;
	auto total_gibbs           = elapsed_gibbs.count() / 1000000.0;
	COUT_STREAM << "Total time: " << total_gibbs << "ms"  << std::endl ;


}
void test_Mixture_UnivariatePoisson(long niter, long burnin, long thin) {


	static const arma::vec y_uvn =  { 9,  9,  9,  9,  9, 10, 10, 16, 16, 18,18,
			18, 18, 19, 19, 19, 19, 19, 19, 19,19, 19, 19, 19,
			19, 19, 19, 19, 19, 19,19, 20, 20, 20, 20, 20, 20,
			20, 20, 20,20, 20, 20, 20, 21, 21, 21, 21, 21, 21,
			22, 22, 22, 22, 22, 22, 22, 22, 22, 22,22, 23, 23,
			23, 23, 23, 23, 23, 23, 23,24, 24, 24, 24, 24, 24, 25, 26,
			26, 32,32, 34 };
	// TODO : Need to go over variable and see what should be checked
	PriorPoisson *prior = new PriorPoisson(poisson_gamma_h_param_t(2,1,1,0.00001),poisson_gamma_q_param_t(3,1,1));
	MixtureUnivariatePoisson * mixture = new MixtureUnivariatePoisson (2, 0.2);
	cluster_indices_t initial_clustering (y_uvn.size());
	AntMANLogger * logger = new AntMANLogger(std::vector<std::string>(), (niter - burnin) / thin );

	auto start_gibbs           = std::chrono::system_clock::now();
	mixture->fit(y_uvn , initial_clustering, false, prior , niter ,burnin ,thin , false , logger);
	auto end_gibbs             = std::chrono::system_clock::now();
	auto elapsed_gibbs         = end_gibbs - start_gibbs;
	auto total_gibbs           = elapsed_gibbs.count() / 1000000.0;
	COUT_STREAM << "Total time: " << total_gibbs << "ms"  << std::endl ;


}

void test_Mixture_MultivariateBernoulli (long niter, long burnin, long thin) {
	static const arma::mat carcinoma = {
	     //A  B  C  D  E  F  G
		 { 0, 0, 0, 0, 0, 0, 0 } ,
		 { 0, 0, 0, 0, 0, 0, 0 } ,
		 { 0, 0, 0, 0, 0, 0, 0 } ,
		 { 0, 0, 0, 0, 0, 0, 0 } ,
		 { 0, 0, 0, 0, 0, 0, 0 } ,
		 { 0, 0, 0, 0, 0, 0, 0 } ,
		 { 0, 0, 0, 0, 0, 0, 0 } ,
		 { 0, 0, 0, 0, 0, 0, 0 } ,
		 { 0, 0, 0, 0, 0, 0, 0 } ,
		 { 0, 0, 0, 0, 0, 0, 0 } ,
		 { 0, 0, 0, 0, 0, 0, 0 } ,
		 { 0, 0, 0, 0, 0, 0, 0 } ,
		 { 0, 0, 0, 0, 0, 0, 0 } ,
		 { 0, 0, 0, 0, 0, 0, 0 } ,
		 { 0, 0, 0, 0, 0, 0, 0 } ,
		 { 0, 0, 0, 0, 0, 0, 0 } ,
		 { 0, 0, 0, 0, 0, 0, 0 } ,
		 { 0, 0, 0, 0, 0, 0, 0 } ,
		 { 0, 0, 0, 0, 0, 0, 0 } ,
		 { 0, 0, 0, 0, 0, 0, 0 } ,
		 { 0, 0, 0, 0, 0, 0, 0 } ,
		 { 0, 0, 0, 0, 0, 0, 0 } ,
		 { 0, 0, 0, 0, 0, 0, 0 } ,
		 { 0, 0, 0, 0, 0, 0, 0 } ,
		 { 0, 0, 0, 0, 0, 0, 0 } ,
		 { 0, 0, 0, 0, 0, 0, 0 } ,
		 { 0, 0, 0, 0, 0, 0, 0 } ,
		 { 0, 0, 0, 0, 0, 0, 0 } ,
		 { 0, 0, 0, 0, 0, 0, 0 } ,
		 { 0, 0, 0, 0, 0, 0, 0 } ,
		 { 0, 0, 0, 0, 0, 0, 0 } ,
		 { 0, 0, 0, 0, 0, 0, 0 } ,
		 { 0, 0, 0, 0, 0, 0, 0 } ,
		 { 0, 0, 0, 0, 0, 0, 0 } ,
		 { 0, 0, 0, 0, 1, 0, 0 } ,
		 { 0, 0, 0, 0, 1, 0, 0 } ,
		 { 0, 1, 0, 0, 0, 0, 0 } ,
		 { 0, 1, 0, 0, 0, 0, 0 } ,
		 { 0, 1, 0, 0, 0, 0, 0 } ,
		 { 0, 1, 0, 0, 0, 0, 0 } ,
		 { 0, 1, 0, 0, 0, 0, 0 } ,
		 { 0, 1, 0, 0, 0, 0, 0 } ,
		 { 0, 1, 0, 0, 0, 0, 1 } ,
		 { 0, 1, 0, 0, 1, 0, 0 } ,
		 { 0, 1, 0, 0, 1, 0, 0 } ,
		 { 0, 1, 0, 0, 1, 0, 0 } ,
		 { 0, 1, 0, 0, 1, 0, 0 } ,
		 { 0, 1, 0, 0, 1, 0, 1 } ,
		 { 0, 1, 0, 0, 1, 0, 1 } ,
		 { 0, 1, 0, 0, 1, 0, 1 } ,
		 { 0, 1, 0, 0, 1, 0, 1 } ,
		 { 0, 1, 0, 0, 1, 0, 1 } ,
		 { 1, 0, 0, 0, 0, 0, 0 } ,
		 { 1, 0, 0, 0, 0, 0, 0 } ,
		 { 1, 0, 1, 0, 1, 0, 1 } ,
		 { 1, 1, 0, 0, 0, 0, 0 } ,
		 { 1, 1, 0, 0, 0, 0, 0 } ,
		 { 1, 1, 0, 0, 0, 0, 1 } ,
		 { 1, 1, 0, 0, 1, 0, 0 } ,
		 { 1, 1, 0, 0, 1, 0, 0 } ,
		 { 1, 1, 0, 0, 1, 0, 1 } ,
		 { 1, 1, 0, 0, 1, 0, 1 } ,
		 { 1, 1, 0, 0, 1, 0, 1 } ,
		 { 1, 1, 0, 0, 1, 0, 1 } ,
		 { 1, 1, 0, 0, 1, 0, 1 } ,
		 { 1, 1, 0, 0, 1, 0, 1 } ,
		 { 1, 1, 0, 0, 1, 0, 1 } ,
		 { 1, 1, 0, 0, 1, 1, 1 } ,
		 { 1, 1, 0, 1, 0, 0, 1 } ,
		 { 1, 1, 0, 1, 1, 0, 1 } ,
		 { 1, 1, 0, 1, 1, 0, 1 } ,
		 { 1, 1, 0, 1, 1, 1, 1 } ,
		 { 1, 1, 0, 1, 1, 1, 1 } ,
		 { 1, 1, 0, 1, 1, 1, 1 } ,
		 { 1, 1, 1, 0, 1, 0, 1 } ,
		 { 1, 1, 1, 0, 1, 0, 1 } ,
		 { 1, 1, 1, 0, 1, 0, 1 } ,
		 { 1, 1, 1, 0, 1, 0, 1 } ,
		 { 1, 1, 1, 0, 1, 0, 1 } ,
		 { 1, 1, 1, 0, 1, 0, 1 } ,
		 { 1, 1, 1, 0, 1, 0, 1 } ,
		 { 1, 1, 1, 0, 1, 0, 1 } ,
		 { 1, 1, 1, 0, 1, 0, 1 } ,
		 { 1, 1, 1, 0, 1, 0, 1 } ,
		 { 1, 1, 1, 0, 1, 0, 1 } ,
		 { 1, 1, 1, 0, 1, 0, 1 } ,
		 { 1, 1, 1, 0, 1, 0, 1 } ,
		 { 1, 1, 1, 0, 1, 1, 1 } ,
		 { 1, 1, 1, 0, 1, 1, 1 } ,
		 { 1, 1, 1, 0, 1, 1, 1 } ,
		 { 1, 1, 1, 0, 1, 1, 1 } ,
		 { 1, 1, 1, 0, 1, 1, 1 } ,
		 { 1, 1, 1, 1, 1, 0, 1 } ,
		 { 1, 1, 1, 1, 1, 0, 1 } ,
		 { 1, 1, 1, 1, 1, 0, 1 } ,
		 { 1, 1, 1, 1, 1, 0, 1 } ,
		 { 1, 1, 1, 1, 1, 0, 1 } ,
		 { 1, 1, 1, 1, 1, 0, 1 } ,
		 { 1, 1, 1, 1, 1, 0, 1 } ,
		 { 1, 1, 1, 1, 1, 0, 1 } ,
		 { 1, 1, 1, 1, 1, 0, 1 } ,
		 { 1, 1, 1, 1, 1, 0, 1 } ,
		 { 1, 1, 1, 1, 1, 1, 1 } ,
		 { 1, 1, 1, 1, 1, 1, 1 } ,
		 { 1, 1, 1, 1, 1, 1, 1 } ,
		 { 1, 1, 1, 1, 1, 1, 1 } ,
		 { 1, 1, 1, 1, 1, 1, 1 } ,
		 { 1, 1, 1, 1, 1, 1, 1 } ,
		 { 1, 1, 1, 1, 1, 1, 1 } ,
		 { 1, 1, 1, 1, 1, 1, 1 } ,
		 { 1, 1, 1, 1, 1, 1, 1 } ,
		 { 1, 1, 1, 1, 1, 1, 1 } ,
		 { 1, 1, 1, 1, 1, 1, 1 } ,
		 { 1, 1, 1, 1, 1, 1, 1 } ,
		 { 1, 1, 1, 1, 1, 1, 1 } ,
		 { 1, 1, 1, 1, 1, 1, 1 } ,
		 { 1, 1, 1, 1, 1, 1, 1 } ,
		 { 1, 1, 1, 1, 1, 1, 1 }
} ;

int d = carcinoma.n_cols;

arma::vec a0(d);
arma::vec b0(d);
a0.fill(1);
b0.fill(1);

PriorPoisson *priormvb = new PriorPoisson(poisson_gamma_h_param_t(2,1,1,0.00001),poisson_gamma_q_param_t(5,10,2));
MixtureMultivariateBinomial * mixturemvb = new MixtureMultivariateBinomial (a0,b0);
AntMANLogger * logger = new AntMANLogger(std::vector<std::string>(), (niter - burnin) / thin );

cluster_indices_t initial_clusteringmvb (carcinoma.n_rows,1);

auto start_gibbs           = std::chrono::system_clock::now();
mixturemvb->fit(carcinoma , initial_clusteringmvb, false, priormvb , niter,  burnin,  thin, false, logger);
auto end_gibbs             = std::chrono::system_clock::now();
auto elapsed_gibbs         = end_gibbs - start_gibbs;
auto total_gibbs           = elapsed_gibbs.count() / 1000000.0;
COUT_STREAM << "Total time: " << total_gibbs << "ms" << std::endl ;

}
void test_mixtures (long niter, long burnin, long thin) {

	VERBOSE_INFO("RUN test_Mixture_UnivariateNormal");
	test_Mixture_UnivariateNormal (niter,  burnin,  thin) ;

	VERBOSE_INFO("RUN test_Mixture_MultivariateNormal");
	test_Mixture_MultivariateNormal (niter,  burnin,  thin) ;

	VERBOSE_INFO("RUN test_Mixture_UnivariatePoisson");
	test_Mixture_UnivariatePoisson(niter,  burnin,  thin);

	VERBOSE_INFO("RUN test_Mixture_MultivariateBernoulli");
	test_Mixture_MultivariateBernoulli(niter,  burnin,  thin);

}





#endif /* TESTS_CPP_AM_TEST_MIXTURES_H_ */
